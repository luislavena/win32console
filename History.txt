=== 1.3.0 / 2007-03-14

* Enhancements
  * Works with Ruby 1.9
  * Usage of Hoe and rake-compiler to ease releasing and extension
    compilation.
  * Redirect STDERR to be processed also for ANSI codes. Closes GH-4
  * Allow ECHO to be displayed [jloveces]

* Bugfixes
  * Properly catch coloring when using autospec in Ruby 1.9 [vertiginous]
    Closes GH-3

* Known issues:
  * win32console no longer automatically translate encoding to the console
    output enconding. Please use Iconv to convert from your encoding (eg. UTF8)
    to current console output:

      current_cp = Win32::Console::OutputCP()
      Iconv.iconv("cp#{current_cp}", "utf-8", utf_string)

    A working example can be seen here: http://gist.github.com/265593

=== 1.2.0 / 2008-11-22

* Enhancements
  * Better code organization and clenaup

* Bugfixes:
  * Removed license conflicting ANSI Term code and functionality.

=== 1.1.0 / 2008-03-17

* Enhancements:
  * Added Kernel#putc
    Redefined Kernel#putc to wrap Win32::Console::ANSI::IO#putc

  * Added #putc to Win32::Console::ANSI::IO 
    This putc buffers escape sequences so that they will be handled properly

  * Added #redirected? to Win32::Console::ANSI::IO
    Checks the mode of the console to see if IO is being redirected or not

  * Added Win32::Console::API#WriteFile
    to both the Ruby and compiled versions

  * Added Win32::Console#WriteFile
    This is a wrapper around Win32::Console::API#WriteFile

  * Split Win32::Console::Constants and Win32::Console::API out into 
    seperate files. These two classes were in 'Win32/Console.rb'
    I moved them into 'Win32/Console/constants.rb' and 'Win32/Console/api.rb'
    respectively.

  * Cleaned up indentation
    indentations was a mixture of tabs and spaces. I made everything indented
    with 2 spaces.

* Bugfixes:
  * Fixed "Invalid Handle" error in compiled version of GetConsoleMode
    I'm actually not sure of the source of this error.
    It may be expected behavior when output is being redirected.
    I worked around it by rescuing the exception in Win32::Console#Mode and
    returning 9999. I picked that arbitrary value, because it is
    higher than 31, which is what I think is the highest value Mode would
    return if output isn't being redirected.
    [Gordon Thiesfeld]

  * Modified Win32::Console::ANSI::IO#write to check for redirection.
    If output is redirected, it uses WriteFile instead of WriteConosle.
    It also skips the parsing step, and passes the escape sequences through.
    [Gordon Thiesfeld]

  * Modified Win32::Console::ANSI::IO#_PrintString
    Didn't change behavior, just tried to make it more idiomatic ruby.
    I didn't make all of the changes I wanted to, because I wasn't sure 
    how to test them all.
    [Gordon Thiesfeld]

  * Modified all Win32::Console::API methods
    [Gordon Thiesfeld]

    It was assigning Win32API functions to class variables.  I switched them to instance variables. I also changed the idiom it was using to instantiate the objects.
    For instance, instead of:

      if @@m_AllocConsole == nil
      @@m_AllocConsole = Win32API.new( "kernel32", "AllocConsole", 
              [], 'l' )

    It is now:

      @AllocConsole ||= Win32API.new( "kernel32", "AllocConsole", [], 'l' )

  * Non-string arguments passed to Win32::Console::ANSI#write caused error
    fix by Ivan Evtuhovich (evtuhovich at gmail dot com).

=== 1.0.8 / 2006-06-05

* New features:
  * First public release of win32console gem by Justin Bailey.

=== 1.0

* New features:
  * Added .dup to _printString function to avoid mangling outside
    string references. Removed the other (later) .dup call.

* Bugfixes:
  * Turned of some exceptions that were conflicting with using the module
    with pipes or redirections.

=== 0.8

* Enhancements:
  * Added ruby docs, and sample test suite.

* Bugfixes:
  * Fixed bugs in reading routines, 

=== 0.5

New features:
  * First public release.
